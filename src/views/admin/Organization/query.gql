fragment OrganizationFragment on Organization {
  id
  name
  budget
  bid
  country {
    id
    name
  }
  category {
    id
    name
  }
  owner {
    id
  }
  persons {
    id
  }
}

mutation upsertOrganization(
  $namewhere: String
  $name: String!
  $budget: Float
  $bid: Float
  $country: CountryUpdateManyInput
  $category: CategoryUpdateManyInput
  $owner: UserUpdateOneWithoutCompanyInput
  $persons: PersonUpdateManyInput
) {
  upsertOrganization(
    where: { name: $namewhere }
    create: {
      name: $name
      owner: $owner
      persons: $persons
      country: $country
      bid: $bid
      budget: $budget
      category: $category
    }
    update: {
      name: $name
      owner: $owner
      persons: $persons
      country: $country
      bid: $bid
      budget: $budget
      category: $category
    }
  ) {
    ...OrganizationFragment
  }
}
mutation deleteOrganization($name: String) {
  deleteOrganization(where: { name: $name }) {
    ...OrganizationFragment
  }
}
query organization($name: String) {
  organization(where: { name: $name }) {
    ...OrganizationFragment
  }
}

query organizations {
  organizations {
    ...OrganizationFragment
  }
}

subscription organizationsub($mutation: [MutationType!]) {
  organization(where: { mutation_in: $mutation }) {
    mutation
    node {
      ...OrganizationFragment
    }
    updatedFields
    previousValues {
      id
      name
    }
  }
}
